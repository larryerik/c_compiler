.386
.model flat, stdcall
option casemap :none
include	windows.inc
include kernel32.inc
include masm32.inc
includelib kernel32.lib
includelib masm32.lib
include msvcrt.inc
includelib msvcrt.lib
.data
len equ 100
  count  dd  0
  item  dd  0
  temp1  dd  ?
  a  dd  ?
  len0  db "%s",0
  b  dd  ?
  len1  db "%s",0
  temp2  dd  ?
  sss  dd  ?
  len2  db "%d",0
  newline db 0ah,0dh
.code
sum PROC,
  x: dword,
  y:dword
  mov eax,0
  mov item,eax
  F0:
  mov eax,item
  mov ebx,10
  cmp eax,ebx
  jb L0
  mov edx,0
  mov temp1,edx
  jmp L1
  L0:
  mov edx,1
  mov temp1,edx
  L1:
  mov eax,temp1
  mov ebx,0
  cmp eax,ebx
  je F1
  mov eax,item
  mov ebx,10
  cmp eax,ebx
  jb L2
  mov edx,0
  mov temp1,edx
  jmp L3
  L2:
  mov edx,1
  mov temp1,edx
  L3:
  mov eax,count
  add eax,x
  mov count,eax
  mov eax,item
  mov ebx,1
  add eax,ebx
  mov item,eax
  jmp F0
  F1:
  mov eax,count
  add eax,y
  mov count,eax
  mov eax,count
  ret
sum ENDP
start:
  invoke crt_scanf,addr len0,addr a
  sub a,30h
  invoke crt_scanf,addr len1,addr b
  sub b,30h
  invoke sum,a,b
  mov temp2,eax
  mov edx,temp2
  mov sss,edx
  invoke crt_printf,addr newline
  invoke crt_printf,addr len2,sss
  invoke crt_scanf,addr len1,addr b
  ret;
end start
